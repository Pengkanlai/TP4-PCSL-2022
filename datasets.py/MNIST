import numpy as np
import torch
import matplotlib.pyplot as plt 

from keras.datasets import mnist
(X_train, y_train), (X_test, y_test) = mnist.load_data()

from sklearn.model_selection import train_test_split
X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = 0.2, random_state = 42)

def dataset_preprocessing(X_train, y_train, X_val, y_val, X_test, y_test, relabelling_type = "even-odd_digits"):
 
    X_train = X_train/255
    X_val = X_val/255
    X_test = X_test/255

    X_train = np.reshape(X_train, (len(X_train), 28*28))
    X_val = np.reshape(X_val, (len(X_val), 28*28))
    X_test = np.reshape(X_test, (len(X_test), 28*28))

    X_train = X_train/np.sqrt(784)
    X_val = X_val/np.sqrt(784)
    X_test = X_test/np.sqrt(784)

    if relabelling_type == "greater-smaller-than-five_digits":
        y_train[y_train <= 5.] = 0
        y_train[y_train > 5.] = 1
        y_val[y_val <= 5.] = 0
        y_val[y_val > 5.] = 1
        y_test[y_test <= 5.] = 0
        y_test[y_test > 5.] = 1
    elif relabelling_type == "even-odd_digits":
        y_train[y_train%2 == 0] = 0
        y_train[y_train%2 == 1] = 1
        y_val[y_val%2 == 0] = 0
        y_val[y_val%2 == 1] = 1
        y_test[y_test%2 == 0] = 0
        y_test[y_test%2 == 1] = 1
    
    return X_train, y_train, X_val, y_val, X_test, y_test
    
xtr, ytr, xval, yval, xte, yte = dataset_preprocessing(X_train, y_train, X_val, y_val, X_test, y_test, relabelling_type="even-odd_digits")
